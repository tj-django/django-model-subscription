# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
---
version: 2
workflows:
  version: 2
  build-deploy:
    jobs:
#      - test-3.8
      - test-3.7
# TODO: FIX ME
#      - test-3.6
#      - test-3.5
#      - test-2.7
jobs:
  test-3.8: &test-template
    docker:
      - image: circleci/python:3.8
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: circle_password

      - image: circleci/mysql:8.0.4
        environment:
          MYSQL_ROOT_PASSWORD: rootpw
          MYSQL_DATABASE: test_db
          MYSQL_USER: circleci
          MYSQL_PASSWORD: passw0rd

    working_directory: ~/repo

    steps:
      - checkout
      - run:
          # Our primary container isn't MYSQL so run a sleep command until it's ready.
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 20`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "poetry.lock" }}
            - v1-dependencies-{{ checksum "tox.ini" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python -m venv venv
            . venv/bin/activate
            make install

      - run:
          name: Show versions
          command: |
            python --version
            pip --version

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "poetry.lock" }}

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            make tox
          environment:
            PG_USER: circleci
            PG_DB: circle_test
            PG_PASSWORD: circle_password
            MSQL_USER: circleci
            MSQL_DB: test_db
            MSQL_PASSWORD: passw0rd

      - save_cache:
          paths:
            - ./.tox
          key: v1-dependencies-{{ checksum "tox.ini" }}

      - store_artifacts:
          path: test-reports
          destination: test-reports
  test-3.7:
    <<: *test-template
    docker:
      - image: circleci/python:3.7
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: circle_password
      - image: circleci/mysql:8.0.4
        environment:
          MYSQL_ROOT_PASSWORD: rootpw
          MYSQL_DATABASE: test_db
          MYSQL_USER: circleci
          MYSQL_PASSWORD: passw0rd

  test-3.6:
    <<: *test-template
    docker:
      - image: circleci/python:3.6
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: circle_password
      - image: circleci/mysql:8.0.4
        environment:
          MYSQL_ROOT_PASSWORD: rootpw
          MYSQL_DATABASE: test_db
          MYSQL_USER: circleci
          MYSQL_PASSWORD: passw0rd
  test-3.5:
    <<: *test-template
    docker:
      - image: circleci/python:3.5
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: circle_password
      - image: circleci/mysql:8.0.4
        environment:
          MYSQL_ROOT_PASSWORD: rootpw
          MYSQL_DATABASE: test_db
          MYSQL_USER: circleci
          MYSQL_PASSWORD: passw0rd
  test-2.7:
    <<: *test-template
    docker:
      - image: circleci/python:2.7
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: circle_password
      - image: circleci/mysql:8.0.4
        environment:
          MYSQL_ROOT_PASSWORD: rootpw
          MYSQL_DATABASE: test_db
          MYSQL_USER: circleci
          MYSQL_PASSWORD: passw0rd
